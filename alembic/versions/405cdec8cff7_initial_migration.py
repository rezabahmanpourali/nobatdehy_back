"""Initial migration Revision ID: 405cdec8cff7 Revises: None Create Date: 2025-01-29 16:11:02.942887 """

from typing import Sequence, Union
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '405cdec8cff7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_comments_id', table_name='comments')
    op.drop_table('comments')
    op.drop_index('ix_imageModel_id', table_name='imageModel')
    op.drop_table('imageModel')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_category_id', table_name='category')
    
    # حذف محدودیت‌های foreign key به جدول category
    op.drop_constraint('barber_hair_model_category_id_fkey', 'barber_hair_model', type_='foreignkey')
    op.drop_constraint('images_category_id_fkey', 'images', type_='foreignkey')
    
    # حذف جدول category
    op.drop_table('category')

    # حذف محدودیت‌های foreign key به جدول hair_model
    op.drop_constraint('barber_hair_model_hair_model_id_fkey', 'barber_hair_model', type_='foreignkey')
    op.drop_constraint('images_hair_model_id_fkey', 'images', type_='foreignkey')
    
    # حذف جدول hair_model
    op.drop_table('hair_model')
    
    op.drop_index('ix_barber_hair_model_id', table_name='barber_hair_model')
    op.drop_table('barber_hair_model')
    op.drop_index('ix_images_id', table_name='images')
    op.drop_table('images')
    op.drop_index('ix_location_id', table_name='location')
    op.drop_table('location')
    op.add_column('barber', sa.Column('name', sa.String(), nullable=True))
    op.create_index(op.f('ix_barber_name'), 'barber', ['name'], unique=False)
    op.drop_constraint('barber_barber_shop_id_fkey', 'barber', type_='foreignkey')
    op.drop_column('barber', 'barber_name')
    op.drop_column('barber', 'barber_shop_id')
    op.add_column('barber_shop', sa.Column('name', sa.String(), nullable=True))
    op.create_index(op.f('ix_barber_shop_name'), 'barber_shop', ['name'], unique=False)
    op.drop_column('barber_shop', 'is_active')
    op.drop_column('barber_shop', 'address')
    op.drop_column('barber_shop', 'barber_shop_name')
    op.drop_column('barber_shop', 'location_id')
    op.drop_column('barber_shop', 'barbers_detail')
    op.drop_column('barber_shop', 'shop_type')
    # ### end Alembic commands ###



def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('barber_shop', sa.Column('shop_type', postgresql.ENUM(
        'SEEN_RECENTLY', 'TOP_BARBERS', 'HOTTEST_BARBERS', name='barbershoptype'), autoincrement=False, nullable=True))
    op.add_column('barber_shop', sa.Column('barbers_detail',
                  sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('barber_shop', sa.Column(
        'location_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('barber_shop', sa.Column('barber_shop_name',
                  sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('barber_shop', sa.Column(
        'address', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('barber_shop', sa.Column(
        'is_active', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_barber_shop_name'), table_name='barber_shop')
    op.drop_column('barber_shop', 'name')
    op.add_column('barber', sa.Column('barber_shop_id',
                  sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('barber', sa.Column('barber_name', sa.VARCHAR(),
                  autoincrement=False, nullable=False))
    op.create_foreign_key('barber_barber_shop_id_fkey',
                          'barber', 'barber_shop', ['barber_shop_id'], ['id'])
    op.drop_index(op.f('ix_barber_name'), table_name='barber')
    op.drop_column('barber', 'name')
    op.create_table('location', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('latitude', sa.DOUBLE_PRECISION(
                        precision=53), autoincrement=False, nullable=False),
                    sa.Column('longitude', sa.DOUBLE_PRECISION(
                        precision=53), autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='location_pkey'))
    op.create_index('ix_location_id', 'location', ['id'], unique=False)
    op.create_table('images', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('file_name', sa.VARCHAR(),
                              autoincrement=False, nullable=False),
                    sa.Column('url', sa.VARCHAR(),
                              autoincrement=False, nullable=False),
                    sa.Column('barber_id', sa.INTEGER(),
                              autoincrement=False, nullable=True),
                    sa.Column('barber_shop_id', sa.INTEGER(),
                              autoincrement=False, nullable=True),
                    sa.Column('hair_model_id', sa.INTEGER(),
                              autoincrement=False, nullable=True),
                    sa.Column('category_id', sa.INTEGER(),
                              autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(
                        ['barber_id'], ['barber.id'], name='images_barber_id_fkey'),
                    sa.ForeignKeyConstraint(['barber_shop_id'], [
                                            'barber_shop.id'], name='images_barber_shop_id_fkey'),
                    sa.ForeignKeyConstraint(
                        ['category_id'], ['category.id'], name='images_category_id_fkey'),
                    sa.ForeignKeyConstraint(
                        ['hair_model_id'], ['hair_model.id'], name='images_hair_model_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='images_pkey'))
    op.create_index('ix_images_id', 'images', ['id'], unique=False)
    op.create_table('barber_hair_model', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('barber_shop_id', sa.INTEGER(),
                              autoincrement=False, nullable=False),
                    sa.Column('hair_model_id', sa.INTEGER(),
                              autoincrement=False, nullable=False),
                    sa.Column('price', sa.DOUBLE_PRECISION(
                        precision=53), autoincrement=False, nullable=False),
                    sa.Column('discount_percentage', sa.DOUBLE_PRECISION(
                        precision=53), autoincrement=False, nullable=True),
                    sa.Column('category_id', sa.INTEGER(),
                              autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['barber_shop_id'], [
                                            'barber_shop.id'], name='barber_hair_model_barber_shop_id_fkey'),
                    sa.ForeignKeyConstraint(
                        ['category_id'], ['category.id'], name='barber_hair_model_category_id_fkey'),
                    sa.ForeignKeyConstraint(['hair_model_id'], [
                                            'hair_model.id'], name='barber_hair_model_hair_model_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='barber_hair_model_pkey'))
    op.create_index('ix_barber_hair_model_id',
                    'barber_hair_model', ['id'], unique=False)
    op.create_table('hair_model', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('name', sa.VARCHAR(),
                              autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='hair_model_pkey'))
    op.create_index('ix_hair_model_id', 'hair_model', ['id'], unique=False)
    op.create_table('category', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('title', sa.VARCHAR(),
                              autoincrement=False, nullable=True),
                    sa.PrimaryKeyConstraint('id', name='category_pkey'))
    op.create_index('ix_category_id', 'category', ['id'], unique=False)
    op.create_table('users', sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"),
                                       autoincrement=True, nullable=False),
                    sa.Column('username', sa.VARCHAR(),
                              autoincrement=False, nullable=True),
                    sa.Column('password', sa.VARCHAR(),
                              autoincrement=False, nullable=True),
                    sa.PrimaryKeyConstraint('id', name='users_pkey'),
                    postgresql_ignore_search_path=False)
    op.create_index('ix_users_username', 'users', ['username'], unique=True)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_table('imageModel', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('image_url', sa.VARCHAR(),
                              autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='imageModel_pkey'))
    op.create_index('ix_imageModel_id', 'imageModel', ['id'], unique=False)
    op.create_table('comments', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('user_id', sa.INTEGER(),
                              autoincrement=False, nullable=False),
                    sa.Column('target_id', sa.INTEGER(),
                              autoincrement=False, nullable=False),
                    sa.Column('rating', sa.DOUBLE_PRECISION(
                        precision=53), autoincrement=False, nullable=False),
                    sa.Column('comment', sa.TEXT(),
                              autoincrement=False, nullable=False),
                    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'),
                              autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(
                        ['target_id'], ['barber_shop.id'], name='comments_target_id_fkey'),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['users.id'], name='comments_user_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='comments_pkey'))
    op.create_index('ix_comments_id', 'comments', ['id'], unique=False)
    # ### end Alembic commands ###
